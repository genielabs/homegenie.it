[{"url":"/1.4/dashboards/","title":"Dashboards","description":"Configuring dashboards and widgets","image":"https://picsum.photos/seed/docs!setup/256/256","content":"## Managing dashboards It is possible to have a summary and navigate through the dashboards by opening the side drawer, clicking the menu button {% zx &#39;icon&#39; %}menu{% endzx %} on the application bar. The side drawer can eventually be fixed by clicking the push pin button {% zx &#39;icon&#39; %}push_pin{% endzx %} located in the bottom right. Next to the drawer button, the dashboard menu button {% zx &#39;icon&#39; %}dashboard{% endzx %} will show options for adding new dashboards and managing the current one. const video= document.getElementById(&#39;video1&#39;); video.addEventListene"},{"url":"/1.4/ui/","title":"Client preferences","description":"Setting up client preferences","image":"https://picsum.photos/seed/docs!setup/256/256","content":"## Setting client language, theme and units Client configuration, such as displayed language, units, theme colors, and dashboards are stored on the server. An arbitrary number of client configuration presets can be stored and then quickly recalled by selecting them from the client preferences page. const video= document.getElementById(&#39;video1&#39;); video.addEventListener(&#39;ended&#39;,function(){ video.load(); },false); When a configuration preset is selected, any changes made to widgets placement, theme and other client preferences will be updated on the server and affect all other cli"},{"url":"/1.4/panel/","title":"HomeGenie Panel","description":"HomeGenie Panel app for Android tablets and phones","image":"https://picsum.photos/seed/docs!install/256/256","content":"## A smart control panel for every room Designed to be as fast and practical as physical buttons, *HomeGenie Panel* is an application for controlling &quot;things&quot; from any Android device, either tablet or phone. Using pinned shortcuts, just one tap away from your phone&#39;s home screen, you can activate lights or run scenarios just as quick as tapping a physical button in reach. {% zx &#39;media-browser&#39; %} media: - type: image preview: images/hgplus/hg_tablet_08.jpg url: images/hgplus/hg_tablet_08.jpg - type: image preview: images/hgplus/hg_tablet_05.jpg url: images/hgplus/hg_table"},{"url":"/1.4/settings/","title":"System settings","description":"HomeGenie system settings","image":"https://picsum.photos/seed/docs!install/256/256","content":"## Configuration Through the system settings page it is possible to configure built-in interface drivers and other options implemented by automation programs such as *&quot;Remote Control&quot;* and *&quot;Weather Forecast&quot;*. Depending on installed packages and custom programs, a different number of configuration options will be available. ## Packages Packages are basically a collections of automation programs that implement and extend system functionality. A package contains usually programs that add a specific set of functionality. For instance, the package `homegenie-auto` contains sma"},{"url":"/1.4/examples/","title":"Example applications","description":"Example HomeGenie applications","image":"https://picsum.photos/seed/docs!install/256/256","content":"{% raw %} h3 { font-size: 140%!important; } {% endraw %} ## Raspberry Pi recipes üç∞ {% assign subposts = collections.example %} {% if subposts.size &gt; 0 %} {%- for subpost in subposts -%} {% assign sublink = subpost.url | url %} - {{ subpost.data.title }} {% endfor %} {% endif %} - GroveRGB rainbow music visualizer ## Smart Home recipes üè† - Remote control ZigBee and Z-Wave using an X10 RF remote - Env light/motion controlled lights - Smart Device feature program - Thermostat with generic temperature sensor and a generic switch - Lights synchronization with Linked Lights program &amp;mdash; "},{"url":"/1.4/create/smart-thermostat/","title":"Creating a Smart Thermostat üå°Ô∏è","description":"How to create a Smart Thermostat with Raspberry Pi and HomeGenie in three simple steps","image":"https://picsum.photos/seed/docs!install/256/256","content":"## Ingredients - a Raspberry Pi with [HomeGenie installed](../../getting-started) (a model [Zero 2 W](https://www.raspberrypi.com/products/raspberry-pi-zero-2-w/) is cheap and perfect for this) - a DHT-xx humidity and temperature sensor (DHT-11 or DHT-22) - a Relay Switch **What you will get** A smart thermostat that **works 100% offline** and where **your own your data**, with logging, statistics, powerful scheduler, automation engine, smart-home-ready gateway with support for ZigBee, Z-Wave and X10, UPnP/DLNA control point, and more... **all for less than $25**. ### Step 1 - connecting compo"},{"url":"/1.4/setup/","title":"Setup","description":"Initial setup and configuration","image":"https://picsum.photos/seed/docs!setup/256/256","content":"## Initial setup When opening HomeGenie UI after the installation (or after a factory reset), the Setup Wizard will walk you through a couple of simple steps to set the base configuration of your system. Here you can enable built-in drivers for Raspberry Pi or other single board computers, and smart home dongles. If at this time you just want to try HomeGenie without using additional drivers or hardware, you can choose to install the **demo** package which includes virtual devices such as smart thermostats, switches, color lights, and a device activity simulator. However, all these settings ca"},{"url":"/1.4/automation/features/","title":"Features","description":"More than just smart-home: a fully programmable general-purpose automation system.","image":"https://picsum.photos/seed/docs!install/256/256","content":"## More than just Smart Home Despite the name, HomeGenie is not just a *Smart Home* server. HomeGenie is a **general-purpose automation server** that routes and processes &quot;signals&quot; and that integrates a series of tools to customize the user interface and the system *intelligence* by the mean of small *automation programs* and *widgets* that can be implemented and tested directly in the browser. It is exactly the set of installed widgets and programs that determines and shapes this general-purpose automation system into something specific, like a *Smart Home Server*, a *Smart Thermost"},{"url":"/1.4/automation/visual/","title":"Scenes","description":"Implementing scenes with visual programming","image":"https://picsum.photos/seed/docs!install/256/256","content":"## Easy and effective With *HomeGenie*, you can create common automation tasks and scenes effortlessly. No need to learn or use any programming language to customize your smart system. ## Visual programming With the *Visual Program* editor, you can create a scene by just interacting with widgets or by dragging and dropping commands from the *Blocks* toolbox located on the left side of the visual editor area. The logic flow and the commands of the scene are in fact represented as colored blocks that can be easily modified and rearranged with your fingertips without ever writing a single line of"},{"url":"/1.4/getting-started/","title":"Getting started","description":"Downloading and installing HomeGenie","image":"https://picsum.photos/seed/docs!install/256/256","content":"## Installing HomeGenie {{ release_name }} {% unpre %} ```html Select target architecture: Windows 64-bit Mac OSX 64-bit Linux 64-bit Linux ARM 32-bit Linux ARM 64-bit .button { width: 280px; font-size: 150%; font-weight: bold; color: var(--accent-color); } div[id] { display: none; } div[id].selected { display: block; } function setTargetArchitecture(arch) { document.querySelectorAll(&#39;.setup-code div[id]&#39;).forEach((c) =&gt; { c.classList.remove(&#39;selected&#39;); }); const selected = document.querySelector(&#39;#&#39; + arch); selected.classList.add(&#39;selected&#39;); } Enter the f"},{"url":"/1.4/getting-started/optional-steps/","title":"Getting started - Optional steps","description":"Optional installation steps","image":"https://picsum.photos/seed/docs!install/256/256","content":"## Optional post-installation steps ### Running as a system service HomeGenie can be installed as a service. The procedure is different depending on the hosting operating system. #### Recommended procedure for Linux 1) Add a specific user for the service and copy the content of `homegenie` folder to the new user home directory: ```shell sudo useradd homegenie sudo cp -ar ./path-to-extracted-folder/homegenie /home/homegenie sudo chown -R homegenie:homegenie /home/homegenie ``` 2) Create the file `/etc/systemd/system/homegenie.service` with the following content: ```shell [Unit] Description=Home"}]