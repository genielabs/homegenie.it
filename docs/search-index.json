
{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["description"],"id":"description","weight":1,"src":"description"},{"path":["content"],"id":"content","weight":1,"src":"content"}],"records":[{"i":0,"$":{"0":{"v":"Clients","n":1},"1":{"v":"Desktop and mobile clients for HomeGenie","n":0.408},"2":{"v":"## HomeGenie web user interface The default server installation includes a web user interface that can be used either from a desktop PC or a mobile client such as Android or iOS device. This is mainly intended for administration purposes to configure and access all aspect of the system. ## HomeGenie Plus for Android Specifically designed to be a Control Panel for the end-user, **HomeGenie Plus** is a feature rich mobile client for your smart home and smart applications. ### Main features - Multi-standard: can connect not just to HomeGenie server but also directly to [HomeGenie Mini](https://gi","n":0.102}}},{"i":1,"$":{"0":{"v":"Setup","n":1},"1":{"v":"Initial setup and configuration","n":0.5},"2":{"v":"## Initial setup After [installing HomeGenie Server](#/get_started), you can access the dashboard and the configuration pages by entering in your web browser the address of the computer where *HG Server* is installed: In the upper left corner of the user interface there are the main navigation buttons, **homeHome** and **settingsConfigure**, while in the *bottom bar* there are buttons to access functionality related to the current page. Clicking the **homeHome** button will open the menu for accessing configured groups (eg. *Dashboard*, *Living Room*, *Kitchen*, etc..) with a brief status summ","n":0.106}}},{"i":2,"$":{"0":{"v":"Interconnections","n":1},"1":{"v":"Creating a network of HomeGenie servers communicating each other","n":0.333},"2":{"v":"## Introduction On a large scale, when we have a big automation setup like the one designed for a villa, an entire building or perhaps even bigger, like it could be the one designed for a smart city, it is required to decentralize the whole system by having a convenient number of local controller units that are able to communicate each other and work like a single big coordinated entity. ## HomeGenie Interconnections During the development of HomeGenie, there was one vision behind the whole design process, a paradigm to follow, which was the one of the *Central Nervous System*. Following that ","n":0.099}}},{"i":3,"$":{"0":{"v":"IR/RF remotes","n":0.707},"1":{"v":"Using infrared and radio frequency remotes to control HomeGenie","n":0.333},"2":{"v":"## IR and RF remotes Even if a phone or tablet can be used to remote control *HomeGenie*, a RF/IR remote is still a quick and comfortable way for controlling devices. HomeGenie support X10 RF remotes and IR controller/remotes supported by [LIRC](http://www.lirc.org/) or other IR gateways that can be found in the *Package Manager*. See the video at the end of in the [Setup](#/docs/setup) page for instruction on installing additional drivers using the *Package Manager*. The video below shows how to use an infrared remote to control lights and switches. #### Troubleshooting LIRC in Linux, Raspber","n":0.102}}},{"i":4,"$":{"0":{"v":"Scheduling","n":1},"1":{"v":"Scheduling scenes and programs by events or time","n":0.354},"2":{"v":"## Scheduling With the *Scheduler*, which is available from the *Configure* menu, *HomeGenie* can be programmed to take some actions on time based occurrences. The main *Scheduler* page is the calendar view that shows programmed events for the day. By clicking the date text, we can choose a different date so to display programmed events for any given day. The time-line of an event will have a yellow bar to indicate the time ranges where the event occurs. If it&#39;s grayed out it means that the occurrence is in the future and has not occurred yet. Passing the pointer over it will display a pop","n":0.098}}},{"i":5,"$":{"0":{"v":"Configuration","n":1},"1":{"v":"Configuring HomeGenie","n":0.707},"2":{"v":"## Configuring groups Smart devices and services (also simply called *modules*) can be organized into *control groups*. From the **settingsConfigure** menu select the **dashboardGroups** option to add and manage groups. Click the **addAdd Group** button located in the *bottom bar* to add a new group. To edit a group select it from the list. The group configuration page will be opened. From this page we can add/sort *modules* in the group, change the wallpaper, rename or delete it. ## Configuring widgets We call *widget*, that part of the user interface through which a module is presented and t","n":0.101}}},{"i":6,"$":{"0":{"v":"Scenarios","n":1},"1":{"v":"Creating and scheduling scenes","n":0.5},"2":{"v":"## Scenarios and scripts To create scenarios, lighting effects or any other kind of automated script, we can use the *Record Macro* functionality which is found in *Actions* menu of the groups&#39; page. When **Record Macro** option is active, every action taken (eg. controlling lights/switches from the user interface or with a remote control), will be stored in a script (namely a *Wizard Script*). By default, in the recorded script, it will be put *1-second delay* between each command. We can switch between other kinds of timing while recording. One of these is called _Mimic_. When Mimic is s","n":0.101}}},{"i":7,"$":{"0":{"v":"UPnP / DLNA","n":0.577},"1":{"v":"Controlling media servers and players","n":0.447},"2":{"v":"## Controlling media servers and players HomeGenie can be used as a control point for DLNA/UPnP devices such as: - Routers / Media Servers - Smart TVs / Media Players - UPnP switches and lights Media servers and players in the network are automatically detected and can be added like other modules to *[control groups](#/docs/configure)*. From there we can browse media files (pictures, music and videos) and play them to any media player/renderer in the local network. This can be done either from the web interface or the mobile client. DLNA/UPnP commands can also be stored in a script with *[Reco","n":0.1}}},{"i":8,"$":{"0":{"v":"Programs (APP)","n":0.707},"1":{"v":"HomeGenie Automation Programs Plugins, languages and SDK","n":0.378},"2":{"v":"What really makes of HomeGenie an *home automation* software is the set of automation programs that are shipped with its factory settings. If we disable all those programs, HomeGenie will just turn into a dumb box, only capable of switching on and off devices on user request. This is because the core of HomeGenie is a *generic purpose* automation engine that is called A.P.E., the Automation Programs&#39; Engine and that does not provide intelligence of any sort by itself. So, what really specialize the use of HomeGenie for a particular purpose or another, are all the automation programs that a","n":0.1}}},{"i":9,"$":{"0":{"v":"Get started","n":0.707},"1":{"v":"About downloading and installing HomeGenie","n":0.447},"2":{"v":"## Download HomeGenie Server Current release is v{{ release.version }} ({{ release.date }}) Linux .deb Ubuntu / Debian derivatives Windows Installer Win7 / Win8 / Win10 Platform agnostic .tgz macOS / Others ## Install instructions ### Windows Download *HomeGenie Windows Installer* and run it. Once installation process is completed, *HomeGenie* UI will be opened. The UI can be also opened by right clicking on the tray icon. ### Ubuntu, Raspbian and others Debian derivatives Follow the instruction to add the [Mono repository](https://www.mono-project.com/download/stable/#download-lin) to your sy","n":0.108}}},{"i":10,"$":{"0":{"v":"Widgets","n":1},"1":{"v":"HomeGenie Automation Programs Plugins, languages and SDK","n":0.378},"2":{"v":"We&#39;ve learned so far that automation programs, smart devices and services are abstracted in HomeGenie as generic *modules*. Depending on the type, a module can then be presented to the end-user in the web interface with a different *widget*. For example, to display a light dimmer module, the *dimmer* widget will be used as it will be for all modules of the same type. So, *widgets* are reusable UI components that are employed to display data and information of a bound *module* and that may also contain some controls (such as buttons, sliders, ...) for interacting with it. Technically speaki","n":0.1}}}]}
